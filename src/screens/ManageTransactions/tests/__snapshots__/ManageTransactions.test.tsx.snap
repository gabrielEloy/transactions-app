// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test <ManageTransactions /> should successfully render component 1`] = `
Array [
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "rgba(0,0,0,.3)",
          "borderRadius": 10,
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#2D2D38",
            "borderRadius": 20,
            "height": 450,
            "overflow": "hidden",
            "width": "80%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "paddingVertical": 20,
              "position": "relative",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#FBFBFB",
                "fontSize": 18,
              }
            }
          >
            New Transaction
          </Text>
          <View
            style={
              Array [
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                },
                Object {
                  "backgroundColor": "#7A7A80",
                  "height": 1,
                },
              ]
            }
          />
        </View>
        <View
          style={
            Object {
              "flex": 2,
              "padding": 20,
            }
          }
        >
          <View>
            <Text
              style={
                Object {
                  "color": "#FBFBFB",
                  "fontFamily": "Exo-Medium",
                }
              }
            >
              Type
            </Text>
            <View
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  Object {
                    "borderRadius": 0,
                    "marginTop": 20,
                  },
                ]
              }
            >
              <View
                onMoveShouldSetResponder={[Function]}
                onMoveShouldSetResponderCapture={[Function]}
                onResponderEnd={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderReject={[Function]}
                onResponderRelease={[Function]}
                onResponderStart={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                onStartShouldSetResponderCapture={[Function]}
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  onLayout={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#FFFFFF",
                      "borderRadius": 5,
                      "height": 40,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderColor": "#C9C9C9",
                        "borderRadius": 5,
                        "borderWidth": 0,
                        "flex": 1,
                        "flexDirection": "row",
                      }
                    }
                  >
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "flex": 1,
                          "flexDirection": "row",
                          "justifyContent": "center",
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "color": "#FFFFFF",
                              "fontSize": 14,
                              "fontWeight": "normal",
                              "textAlign": "center",
                            },
                            Object {},
                          ]
                        }
                      >
                        Credit
                      </Text>
                    </View>
                    <View
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "alignItems": "center",
                          "flex": 1,
                          "flexDirection": "row",
                          "justifyContent": "center",
                          "opacity": 1,
                        }
                      }
                    >
                      <Text
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "color": "#000000",
                              "fontSize": 14,
                              "fontWeight": "normal",
                              "textAlign": "center",
                            },
                            Object {
                              "color": "black",
                              "fontFamily": "Exo-Medium",
                            },
                          ]
                        }
                      >
                        Debit
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "marginTop": 20,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#FBFBFB",
                  "fontFamily": "Exo-Medium",
                }
              }
            >
              Description
            </Text>
            <TextInput
              allowFontScaling={true}
              onChangeText={[Function]}
              rejectResponderTermination={true}
              style={
                Object {
                  "borderBottomColor": "#7A7A80",
                  "borderBottomWidth": 1,
                  "color": "#FBFBFB",
                  "fontFamily": "Exo-Medium",
                }
              }
              testID="descriptionInput"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "marginTop": 20,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#FBFBFB",
                  "fontFamily": "Exo-Medium",
                }
              }
            >
              Value
            </Text>
            <TextInput
              allowFontScaling={true}
              keyboardType="numeric"
              onChangeText={[Function]}
              options={
                Object {
                  "delimiter": ".",
                  "precision": 2,
                  "separator": ",",
                  "suffixUnit": "",
                  "unit": "R$ ",
                }
              }
              rejectResponderTermination={true}
              style={
                Object {
                  "borderBottomColor": "#7A7A80",
                  "borderBottomWidth": 1,
                  "color": "#FBFBFB",
                  "fontFamily": "Exo-Medium",
                }
              }
              testID="valueInput"
              type="money"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "flex-end",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "flex-end",
              "marginBottom": 20,
              "marginRight": 25,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0)",
                "borderRadius": 5,
                "opacity": 1,
                "paddingHorizontal": 20,
                "paddingVertical": 15,
              }
            }
            testID="cancelButton"
          >
            <Text
              style={
                Object {
                  "color": "#FBFBFB",
                  "fontFamily": "Exo-Medium",
                }
              }
            >
              Cancel
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#903EE3",
                "borderRadius": 5,
                "opacity": 1,
                "paddingHorizontal": 20,
                "paddingVertical": 15,
              }
            }
            testID="addTransactionButton"
          >
            <Text
              style={
                Object {
                  "color": "#FBFBFB",
                  "fontFamily": "Exo-Medium",
                }
              }
            >
              Add
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>,
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 3,
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#7A7A80",
          "fontFamily": "Exo-Medium",
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      Total
    </Text>
    <Text
      style={
        Object {
          "color": "#FBFBFB",
          "fontFamily": "Exo-Light",
          "fontSize": 42,
          "marginBottom": 10,
        }
      }
    >
      R$ 0,00
    </Text>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#903EE3",
          "borderRadius": 5,
          "opacity": 1,
          "paddingHorizontal": 20,
          "paddingVertical": 15,
        }
      }
      testID="rootAddTransactionButton"
    >
      <Text
        style={
          Object {
            "color": "#FBFBFB",
            "fontFamily": "Exo-Medium",
            "fontSize": 18,
          }
        }
      >
        Add transaction
      </Text>
    </View>
  </View>,
  <View
    style={
      Object {
        "flex": 5,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#7A7A80",
          "fontFamily": "Exo-Medium",
          "fontSize": 16,
          "textAlign": "center",
        }
      }
    >
      Transactions
    </Text>
    <RCTScrollView
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      testID="transactionList"
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View />
    </RCTScrollView>
  </View>,
]
`;
